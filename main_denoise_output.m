%%
clear;
clc;
SNR=36;
filename='audio1.wav';
[s, fs] = audioread(filename);               % 读入数据文件
s=s-mean(s);                            % 消除直流分量
s=s/max(abs(s));                        % 幅值归一
N=length(s);                            % 语音长度
time=(0:N-1)/fs;                        % 设置时间刻度
%noise = random('norm', 0, 1-SNR, [N,1]); % 添加高斯噪声
noise=randn(size(s));                      % 产生随机噪声
%b=fir1(31,0.5);                         % 设计FIR滤波器,代替H
%noise=filter(b,1,noise);                     % FIR滤波
[signal,~]=add_noisedata(s,noise,fs,fs,SNR);% 产生带噪语音，信噪比为SNR
lev=4;
output=wden(signal,'sqtwolog','s','one',lev,'sym8');
output=output/max(abs(output)); 
audiowrite('wav1.wav',signal,fs);
audiowrite('wav2.wav',output,fs);
%%
clear;
clc;
SNR=36;
filename='audio1.wav';
[s, fs] = audioread(filename);               % 读入数据文件
s=s-mean(s);                            % 消除直流分量
s=s/max(abs(s));                        % 幅值归一
N=length(s);                            % 语音长度
time=(0:N-1)./fs;                        % 设置时间刻度
noise = random('norm', 0, 1, [N,1]); % 添加高斯噪声
[signal,~]=add_noisedata(s,noise,fs,fs,SNR);% 产生带噪语音，信噪比为SNR
noise_estimated = random('norm', 0, 1, [N,1]);
[~,noise_estimated]=add_noisedata(s,noise_estimated,fs,fs,SNR);
fft_signal = fft(signal);
fft_noise_estimated = fft(noise_estimated);
E_noise_estimated = sum(abs(fft_noise_estimated)) / N;
mag_signal = abs(fft_signal);
phase_signal = angle(fft_signal);   % 保留相位信息
mag_signal = mag_signal - E_noise_estimated;
mag_signal(mag_signal<0)=0; % 恢复
fft_signal = mag_signal .* exp(1i.*phase_signal);
output = real(ifft(fft_signal)); 
audiowrite('sub1.wav',signal,fs);
audiowrite('sub2.wav',output,fs);